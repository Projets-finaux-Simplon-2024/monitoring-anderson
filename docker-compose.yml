services:
  # Prometheus pour la collecte des métriques
  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network
    restart: always

  # Grafana pour la visualisation des métriques
  grafana:
    image: grafana/grafana:latest
    container_name: grafana_container
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards  # Montre les dashboards JSON
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring_network
    restart: always

  # Node exporter pour la collecte des métriques système
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter_container
    ports:
      - "9100:9100"
    networks:
      - monitoring_network
    restart: always

  # Exporter PostgreSQL pour la collecte des métriques PostgreSQL
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter_container
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@db:5432/anderson?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - monitoring_network
    restart: always

  # Alertmanager pour la gestion des alertes
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager_container
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    ports:
      - "9093:9093"
    networks:
      - monitoring_network
    restart: always

volumes:
  grafana-storage:

networks:
  monitoring_network:
    external: true
